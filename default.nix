# This file was auto-generated by cabal2nix. Please do NOT edit manually!

{ mkDerivation, aeson, asn1-types, attoparsec, base, blaze-builder
, blaze-html, bytestring, conduit, data-default, directory
, esqueleto, fast-logger, file-embed, filepath, highlighter, hjsmin
, hspec, http-conduit, http-types, lens, lifted-base, markdown
, monad-control, monad-logger, MonadRandom, network, network-uri
, old-locale, path-pieces, pcre-light, persistent
, persistent-postgresql, persistent-template, process-extras
, resourcet, shakespeare, stdenv, system-filepath, template-haskell
, text, thyme, transformers, wai, wai-extra, wai-logger, warp, yaml
, yesod, yesod-auth, yesod-core, yesod-form, yesod-newsfeed
, yesod-pagination, yesod-static, yesod-test

, bowerPreBuilder, nodePackages, postgresql, darwin
}:

let self = {
  passthru.flag = flag: mkDerivation (self // {
    configureFlags = (self.configureFlags or []) ++ [ flag ];
  });

  pname = "webapp2";
  version = "0.0.0";
  src = stdenv.lib.sourceFilesBySuffices ./. [
    ".cabal" ".css" ".hamlet" ".hs" ".ico" ".js" ".lucius" ".msg" ".png" ".txt" ".yml"
    "models" "routes"
  ];

  # start a temporary postgres server for tests
  preCheck = builtins.readFile ./tests/dbsetup.sh;
  doCheck = true;

  isLibrary = true;
  isExecutable = true;
  buildTools = [
    nodePackages.coffee-script nodePackages.uglify-js postgresql
  ];
  buildDepends = [
    aeson asn1-types attoparsec base blaze-builder blaze-html
    bytestring conduit data-default directory esqueleto fast-logger
    file-embed filepath highlighter hjsmin http-conduit http-types lens
    markdown monad-control monad-logger MonadRandom network network-uri
    old-locale path-pieces pcre-light persistent persistent-postgresql
    persistent-template process-extras shakespeare system-filepath
    template-haskell text thyme wai wai-extra wai-logger warp yaml
    yesod yesod-auth yesod-core yesod-form yesod-newsfeed
    yesod-pagination yesod-static
  ];
  testDepends = [
    base hspec lifted-base monad-logger persistent
    persistent-postgresql resourcet text transformers yesod yesod-core
    yesod-test
  ];
  preBuild = bowerPreBuilder ./nix/bower.nix;
  postInstall = ''
    cp -pR static $out/static
    cp -pR config $out/config
  '';
  license = stdenv.lib.licenses.bsd3;
}; in mkDerivation self
